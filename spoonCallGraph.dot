digraph CallGraph {
"behavioral.visitor.Liquor : accept" -> "java.lang.Override";
"behavioral.visitor.Liquor : accept" -> "java.lang.Override";
"behavioral.visitor.Liquor : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Liquor : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Liquor : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Necessity : accept" -> "java.lang.Override";
"behavioral.visitor.Necessity : accept" -> "java.lang.Override";
"behavioral.visitor.Necessity : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Necessity : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Necessity : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Product : getName" -> "java.lang.String";
"behavioral.visitor.Product : getName" -> "java.lang.String";
"behavioral.visitor.Product : setName" -> "java.lang.String";
"behavioral.visitor.Product : setName" -> "java.lang.String";
"behavioral.visitor.Product : setName" -> "java.lang.String";
"behavioral.visitor.Product : setName" -> "java.lang.String";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Liquor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Liquor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxHolidayVisitor : visit" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.TaxVisitor : computeTax" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.System";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.System";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.io.PrintStream";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.io.PrintStream";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.String";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.String";
"behavioral.visitor.TaxVisitor : computeTax" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.Class";
"behavioral.visitor.TaxVisitor : computeTax" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.Class";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.String";
"behavioral.visitor.TaxVisitor : computeTax" -> "java.lang.String";
"behavioral.visitor.TaxVisitor : computeTax" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : computeTax" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Liquor";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Liquor";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Necessity";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Necessity";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "java.lang.Override";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Product";
"behavioral.visitor.TaxVisitor : visit" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.util.List";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.util.List";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Visitable";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.lang.System";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.lang.System";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.io.PrintStream";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.io.PrintStream";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.lang.String";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.lang.String";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : computeTaxForProducts" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : computeTaxForProducts" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String[]";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "java.util.Arrays";
"behavioral.visitor.Test : main" -> "java.util.Arrays";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "java.lang.Object[]";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Necessity";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Necessity";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Liquor";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Liquor";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Tobacco";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.System";
"behavioral.visitor.Test : main" -> "java.lang.System";
"behavioral.visitor.Test : main" -> "java.io.PrintStream";
"behavioral.visitor.Test : main" -> "java.io.PrintStream";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : main" -> "java.lang.System";
"behavioral.visitor.Test : main" -> "java.lang.System";
"behavioral.visitor.Test : main" -> "java.io.PrintStream";
"behavioral.visitor.Test : main" -> "java.io.PrintStream";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.lang.String";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxVisitor";
"behavioral.visitor.Test : main" -> "java.util.List";
"behavioral.visitor.Test : main" -> "behavioral.visitor.Product";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxHolidayVisitor";
"behavioral.visitor.Test : main" -> "behavioral.visitor.TaxHolidayVisitor";
"behavioral.visitor.Tobacco : accept" -> "java.lang.Override";
"behavioral.visitor.Tobacco : accept" -> "java.lang.Override";
"behavioral.visitor.Tobacco : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Tobacco : accept" -> "behavioral.visitor.Visitor";
"behavioral.visitor.Tobacco : accept" -> "behavioral.visitor.Visitor";
}